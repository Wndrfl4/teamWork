import express from "express";
import axios from "axios";
import dotenv from "dotenv";
import cors from "cors";
dotenv.config();

const app = express();
app.use(cors());
app.use(express.json({ limit: "2mb" }));
app.use(express.static("public"));

const { GITHUB_TOKEN, GITHUB_OWNER, GITHUB_REPO, GITHUB_BRANCH } = process.env;

async function getFileSha(path) {
  try {
    const res = await axios.get(
      `https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/contents/${path}?ref=${GITHUB_BRANCH}`,
      { headers: { Authorization: `token ${GITHUB_TOKEN}` } }
    );
    return res.data.sha;
  } catch {
    return null;
  }
}

app.post("/commit", async (req, res) => {
  const { path, content, message } = req.body;
  if (!path || !content)
    return res.status(400).json({ error: "Missing path or content" });

  try {
    const sha = await getFileSha(path);
    const base64 = Buffer.from(content).toString("base64");

    const result = await axios.put(
      `https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/contents/${path}`,
      {
        message: message || "Автоматический коммит с сайта",
        content: base64,
        branch: GITHUB_BRANCH,
        sha,
      },
      { headers: { Authorization: `token ${GITHUB_TOKEN}` } }
    );

    res.json({ success: true, commit: result.data.commit.sha });
  } catch (err) {
    console.error(err.response?.data || err.message);
    res.status(500).json({ error: err.message });
  }
});

app.listen(3000, () => console.log("✅ Сервер запущен на http://localhost:3000"));
